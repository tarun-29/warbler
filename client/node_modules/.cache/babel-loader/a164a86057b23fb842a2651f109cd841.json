{"ast":null,"code":"import _objectWithoutProperties from \"/Users/tarunkantiwal/Desktop/React/warbler/client/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { apiCall } from \"../../services/api\";\nimport { SET_CURRENT_USER } from \"../actionTypes\";\nimport { addError, removeError } from \"../actions/error\";\nexport function setCurrentUser(user) {\n  return {\n    type: SET_CURRENT_USER,\n    user\n  };\n}\nexport function logout() {\n  return dispatch => {\n    localStorage.clear();\n    dispatch(setCurrentUser({}));\n  };\n}\nexport function authUser(type, userData) {\n  return dispatch => {\n    // wrap our thunk in a promise so we can wait for the API call\n    return new Promise((resolve, reject) => {\n      return apiCall(\"post\", `/api/auth/${type}`, userData).then((_ref) => {\n        let token = _ref.token,\n            user = _objectWithoutProperties(_ref, [\"token\"]);\n\n        localStorage.setItem(\"jwtToken\", token);\n        dispatch(setCurrentUser(user));\n        dispatch(removeError());\n        resolve();\n      }).catch(err => {\n        dispatch(addError(err.message));\n        reject();\n      });\n    });\n  };\n}","map":{"version":3,"sources":["/Users/tarunkantiwal/Desktop/React/warbler/client/src/store/actions/auth.js"],"names":["apiCall","SET_CURRENT_USER","addError","removeError","setCurrentUser","user","type","logout","dispatch","localStorage","clear","authUser","userData","Promise","resolve","reject","then","token","setItem","catch","err","message"],"mappings":";AAAA,SAASA,OAAT,QAAwB,oBAAxB;AACA,SAASC,gBAAT,QAAiC,gBAAjC;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,kBAAtC;AAEA,OAAO,SAASC,cAAT,CAAwBC,IAAxB,EAA8B;AACnC,SAAO;AACLC,IAAAA,IAAI,EAAEL,gBADD;AAELI,IAAAA;AAFK,GAAP;AAID;AAED,OAAO,SAASE,MAAT,GAAiB;AACtB,SAAOC,QAAQ,IAAG;AAChBC,IAAAA,YAAY,CAACC,KAAb;AACAF,IAAAA,QAAQ,CAACJ,cAAc,CAAC,EAAD,CAAf,CAAR;AACD,GAHD;AAID;AAED,OAAO,SAASO,QAAT,CAAkBL,IAAlB,EAAwBM,QAAxB,EAAkC;AACvC,SAAOJ,QAAQ,IAAI;AACjB;AACA,WAAO,IAAIK,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,aAAOf,OAAO,CAAC,MAAD,EAAU,aAAYM,IAAK,EAA3B,EAA8BM,QAA9B,CAAP,CACJI,IADI,CACC,UAAwB;AAAA,YAArBC,KAAqB,QAArBA,KAAqB;AAAA,YAAXZ,IAAW;;AAC5BI,QAAAA,YAAY,CAACS,OAAb,CAAqB,UAArB,EAAiCD,KAAjC;AACAT,QAAAA,QAAQ,CAACJ,cAAc,CAACC,IAAD,CAAf,CAAR;AACAG,QAAAA,QAAQ,CAACL,WAAW,EAAZ,CAAR;AACAW,QAAAA,OAAO;AACR,OANI,EAOJK,KAPI,CAOEC,GAAG,IAAI;AACZZ,QAAAA,QAAQ,CAACN,QAAQ,CAACkB,GAAG,CAACC,OAAL,CAAT,CAAR;AACAN,QAAAA,MAAM;AACP,OAVI,CAAP;AAWD,KAZM,CAAP;AAaD,GAfD;AAgBD","sourcesContent":["import { apiCall } from \"../../services/api\";\nimport { SET_CURRENT_USER } from \"../actionTypes\";\nimport { addError, removeError } from \"../actions/error\";\n\nexport function setCurrentUser(user) {\n  return {\n    type: SET_CURRENT_USER,\n    user\n  };\n}\n\nexport function logout(){\n  return dispatch =>{\n    localStorage.clear();\n    dispatch(setCurrentUser({}));\n  }\n}\n\nexport function authUser(type, userData) {\n  return dispatch => {\n    // wrap our thunk in a promise so we can wait for the API call\n    return new Promise((resolve, reject) => {\n      return apiCall(\"post\", `/api/auth/${type}`, userData)\n        .then(({ token, ...user }) => {\n          localStorage.setItem(\"jwtToken\", token);\n          dispatch(setCurrentUser(user));\n          dispatch(removeError());\n          resolve();\n        })\n        .catch(err => {\n          dispatch(addError(err.message));\n          reject();\n        });\n    });\n  };\n}\n"]},"metadata":{},"sourceType":"module"}