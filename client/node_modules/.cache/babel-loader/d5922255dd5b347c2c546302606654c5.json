{"ast":null,"code":"import { apiCall } from \"../../services/api\";\nimport { addError } from \"../actions/error\";\nimport { LOAD_MESSAGES, REMOVE_MESSAGES } from \"../actionTypes\";\nexport const loadMessages = messages => ({\n  type: LOAD_MESSAGES,\n  messages\n});\nexport const remove = id => ({\n  type: REMOVE_MESSAGES,\n  id\n});\nexport const removeMessage = (user_id, message_id) => {\n  return dispatch => {\n    return apiCall(\"delete\", `/api/users/${user_id}/messages/${message_id}`).then(() => dispatch(remove(message_id))).catch(e => {\n      dispatch(addError(e.message));\n    });\n  };\n};\nexport const fetchMessages = () => {\n  return dispatch => {\n    return apiCall(\"GET\", \"/api/messages\").then(response => {\n      dispatch(loadMessages(response));\n    }).catch(err => {\n      dispatch(addError(err.message));\n    });\n  };\n};\nexport const postNewMessage = text => (dispatch, getState) => {\n  let _getState = getState(),\n      currentUser = _getState.currentUser;\n\n  const id = currentUser.user.id;\n  return apiCall(\"post\", `/api/users/${id}/messages`, {\n    text\n  }).then(res => {// res=>{}\n  }).catch(e => {\n    dispatch(addError(e.message));\n  });\n};","map":{"version":3,"sources":["/Users/tarunkantiwal/Desktop/React/warbler/client/src/store/actions/messages.js"],"names":["apiCall","addError","LOAD_MESSAGES","REMOVE_MESSAGES","loadMessages","messages","type","remove","id","removeMessage","user_id","message_id","dispatch","then","catch","e","message","fetchMessages","response","err","postNewMessage","text","getState","currentUser","user","res"],"mappings":"AAAA,SAASA,OAAT,QAAwB,oBAAxB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,aAAT,EAAwBC,eAAxB,QAA+C,gBAA/C;AAEA,OAAO,MAAMC,YAAY,GAAGC,QAAQ,KAAK;AACvCC,EAAAA,IAAI,EAAEJ,aADiC;AAEvCG,EAAAA;AAFuC,CAAL,CAA7B;AAKP,OAAO,MAAME,MAAM,GAAGC,EAAE,KAAG;AACzBF,EAAAA,IAAI,EAAEH,eADmB;AAEzBK,EAAAA;AAFyB,CAAH,CAAjB;AAKP,OAAO,MAAMC,aAAa,GAAG,CAACC,OAAD,EAAUC,UAAV,KAAuB;AAClD,SAAOC,QAAQ,IAAE;AACf,WAAOZ,OAAO,CAAC,QAAD,EAAW,cAAaU,OAAQ,aAAYC,UAAW,EAAvD,CAAP,CACNE,IADM,CACD,MACJD,QAAQ,CAACL,MAAM,CAACI,UAAD,CAAP,CAFH,EAING,KAJM,CAIAC,CAAC,IAAE;AACRH,MAAAA,QAAQ,CAACX,QAAQ,CAACc,CAAC,CAACC,OAAH,CAAT,CAAR;AACD,KANM,CAAP;AAOD,GARD;AASD,CAVM;AAYP,OAAO,MAAMC,aAAa,GAAG,MAAM;AACjC,SAAOL,QAAQ,IAAI;AACjB,WAAOZ,OAAO,CAAC,KAAD,EAAQ,eAAR,CAAP,CACJa,IADI,CACCK,QAAQ,IAAI;AAChBN,MAAAA,QAAQ,CAACR,YAAY,CAACc,QAAD,CAAb,CAAR;AACD,KAHI,EAIJJ,KAJI,CAIEK,GAAG,IAAI;AACZP,MAAAA,QAAQ,CAACX,QAAQ,CAACkB,GAAG,CAACH,OAAL,CAAT,CAAR;AACD,KANI,CAAP;AAOD,GARD;AASD,CAVM;AAaP,OAAO,MAAMI,cAAc,GAAGC,IAAI,IAAI,CAACT,QAAD,EAAWU,QAAX,KAAsB;AAAA,kBACpCA,QAAQ,EAD4B;AAAA,MACpDC,WADoD,aACpDA,WADoD;;AAE1D,QAAMf,EAAE,GAAGe,WAAW,CAACC,IAAZ,CAAiBhB,EAA5B;AACA,SAAOR,OAAO,CAAC,MAAD,EAAU,cAAaQ,EAAG,WAA1B,EAAsC;AAACa,IAAAA;AAAD,GAAtC,CAAP,CACNR,IADM,CACDY,GAAG,IAAE,CACT;AACD,GAHM,EAINX,KAJM,CAIAC,CAAC,IAAE;AACRH,IAAAA,QAAQ,CAACX,QAAQ,CAACc,CAAC,CAACC,OAAH,CAAT,CAAR;AACD,GANM,CAAP;AAOD,CAVM","sourcesContent":["import { apiCall } from \"../../services/api\";\nimport { addError } from \"../actions/error\";\nimport { LOAD_MESSAGES, REMOVE_MESSAGES } from \"../actionTypes\";\n\nexport const loadMessages = messages => ({\n  type: LOAD_MESSAGES,\n  messages\n});\n\nexport const remove = id=>({\n  type: REMOVE_MESSAGES,\n  id\n})\n\nexport const removeMessage = (user_id, message_id)=>{\n  return dispatch=>{\n    return apiCall(\"delete\",`/api/users/${user_id}/messages/${message_id}`)\n    .then(()=>\n      dispatch(remove(message_id))\n    )\n    .catch(e=>{\n      dispatch(addError(e.message))\n    })\n  }\n}\n\nexport const fetchMessages = () => {\n  return dispatch => {\n    return apiCall(\"GET\", \"/api/messages\")\n      .then(response => {\n        dispatch(loadMessages(response));\n      })\n      .catch(err => {\n        dispatch(addError(err.message));\n      });\n  };\n};\n\n\nexport const postNewMessage = text => (dispatch, getState)=>{\n  let { currentUser } = getState();\n  const id = currentUser.user.id;\n  return apiCall(\"post\", `/api/users/${id}/messages`, {text})\n  .then(res=>{\n    // res=>{}\n  })\n  .catch(e=>{\n    dispatch(addError(e.message))\n  })\n}"]},"metadata":{},"sourceType":"module"}